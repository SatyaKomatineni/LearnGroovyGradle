/*
 * Understand Gradle tasks: Creating tasks
 */

//***************************************************************
//Project.getBuildscript(): ScriptHandler is the closure delegate
//So look for the method signatures on ScriptHanlder class
//***************************************************************
buildscript {
  //This line appears first
	println "1. in buildscript"
}

//Rest of the execution 
println "2. Rest of the script begins"

//**************************************************
//Many ways of creating tasks in gradle
//**************************************************

//Creating without a formality
//**************************************************
task hello {
  println 'Creating a task called hello'
  doLast {
    println 'Executing hello'
  }
}

//Creating with a function call
//**************************************************
task ("hello2") {
  println 'Creating a task called hello2 as a function call'
  doLast {
    println 'Executing hello2'
  }
}

//Strange syntax. Creatin without string quotes
//**************************************************
task (hello3) {
  println 'Creating a task called hello3 as a function call'
  doLast {
    println 'Executing hello3'
  }
}

//Using the taskContainer (collection) to create
//**************************************************
tasks.create('hello4') {
  println 'Creating a task called hello4 using task container'
  doLast {
    println 'Executing hello4'
  }
}

//**************************************************
//Define a task called build 
//so that it can be made a default task
//later, so we have an anchor point to call tasks
//**************************************************
task build {
  //we can define dependencies here during creation
  // Or locate this task by name and define the dependencies there

  //Uncomment the following if you want to define them
  //dependsOn hello, hello2, hello3
}

//**************************************************
// Examine what happens to a task.
// API can be found at org.gradle.api.task;
//
// You will see following printed
// *********************************
// Name of the build task is:(build)
// Path of the build task is:(:build)
// build task object itself:(task ':build')
//**************************************************
println ("Name of the build task is:(" + build.name + ")")
println ("Path of the build task is:(" + build.path+ ")")
println ("build task object itself:(" + build+ ")")

//**************************************************
// Define a default task to execute by running
// gradle (with out any args)
//**************************************************
defaultTasks 'build'

/*
* Invalid Block
**********************************************
* The name build is now allocated to an object
* it points to a task object called build
* defaultTasks is a method that takes a list of strings
**********************************************
defaultTasks build
***********************************************
*/

//**************************************************
// Goal: Define dependencies for the tasks
//
// Locate build task
// Define a dependency on another task
// This is seen as a way to locate the task named build
//**************************************************
build {
  dependsOn hello, hello2, hello3, hello4

  doLast {
    println 'All dependent tasks completed'
    println 'build finished'
  }
}
